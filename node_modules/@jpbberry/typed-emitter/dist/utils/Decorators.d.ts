import { EventEmitter } from '../emitters/EventEmitter';
import { ExtendedEmitter } from '../emitters/ExtendedEmitter';
export declare const eventMapper: unique symbol;
export interface EventMapperOptions {
    event: string;
    method: string | Function;
    type: 'on' | 'once';
}
declare type EMITTER = EventEmitter<any> | ExtendedEmitter;
export declare function Event(event: string): (target: EMITTER, method: string) => void;
export declare function Once(event: string): (target: EMITTER, method: string) => void;
export {};
